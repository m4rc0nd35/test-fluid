{
	"info": {
		"_postman_id": "3d7fbd36-8ca4-4619-a7e8-27c4f11c7044",
		"name": "Fluid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9642318"
	},
	"item": [
		{
			"name": "Set params job",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should set params\", function () {",
							"    pm.expect(pm.response).to.json;",
							"});",
							"pm.test(\"Should return equal body\", function () {",
							"    const response = pm.response.json()",
							"    pm.expect(response).contains(JSON.parse(pm.request.body.raw))",
							"});",
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pause\": false,\n    \"getLimit\": 500,\n    \"cron\": \"22 * * * *\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/setting",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"setting"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find one lead by uuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Successful request statusFlow\", function () {",
							"    const response = pm.response.json()",
							"    console.log(response)",
							"    pm.expect(response.statusFlow).to.be.oneOf([\"processing\",\"processed\",\"recused\"])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/lead/3eba9d04-c3fc-487d-a721-e291732a4c0a",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"lead",
						"3eba9d04-c3fc-487d-a721-e291732a4c0a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find all lead",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Successful request array greater zero\", function () {",
							"    const response = pm.response.json()",
							"    pm.expect(response.length).gt(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/lead/all",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"lead",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find history status by uuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Successful request one or more register\", function () {",
							"    const response = pm.response.json()",
							"    pm.expect(response.length).gt(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/datalogger/3eba9d04-c3fc-487d-a721-e291732a4c0a",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"datalogger",
						"3eba9d04-c3fc-487d-a721-e291732a4c0a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Successful request one or more register\", function () {",
							"    const response = pm.response.json()",
							"    pm.expect(response.length).gt(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/datalogger/stats",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"datalogger",
						"stats"
					]
				}
			},
			"response": []
		}
	]
}